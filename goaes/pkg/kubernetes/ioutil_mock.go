// Code generated by MockGen. DO NOT EDIT.
// Source: ioutil.go

// Package kubernetes is a generated GoMock package.
package kubernetes

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockioUtil is a mock of ioUtil interface.
type MockioUtil struct {
	ctrl     *gomock.Controller
	recorder *MockioUtilMockRecorder
}

// MockioUtilMockRecorder is the mock recorder for MockioUtil.
type MockioUtilMockRecorder struct {
	mock *MockioUtil
}

// NewMockioUtil creates a new mock instance.
func NewMockioUtil(ctrl *gomock.Controller) *MockioUtil {
	mock := &MockioUtil{ctrl: ctrl}
	mock.recorder = &MockioUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockioUtil) EXPECT() *MockioUtilMockRecorder {
	return m.recorder
}

// ReadFile mocks base method.
func (m *MockioUtil) ReadFile(filename string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadFile", filename)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadFile indicates an expected call of ReadFile.
func (mr *MockioUtilMockRecorder) ReadFile(filename interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadFile", reflect.TypeOf((*MockioUtil)(nil).ReadFile), filename)
}
