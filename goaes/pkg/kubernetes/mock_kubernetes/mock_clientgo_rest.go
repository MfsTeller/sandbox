// Code generated by MockGen. DO NOT EDIT.
// Source: clientgo_rest.go

// Package mock_kubernetes is a generated GoMock package.
package mock_kubernetes

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	rest "k8s.io/client-go/rest"
)

// MockclientGoRest is a mock of clientGoRest interface.
type MockclientGoRest struct {
	ctrl     *gomock.Controller
	recorder *MockclientGoRestMockRecorder
}

// MockclientGoRestMockRecorder is the mock recorder for MockclientGoRest.
type MockclientGoRestMockRecorder struct {
	mock *MockclientGoRest
}

// NewMockclientGoRest creates a new mock instance.
func NewMockclientGoRest(ctrl *gomock.Controller) *MockclientGoRest {
	mock := &MockclientGoRest{ctrl: ctrl}
	mock.recorder = &MockclientGoRestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockclientGoRest) EXPECT() *MockclientGoRestMockRecorder {
	return m.recorder
}

// InClusterConfig mocks base method.
func (m *MockclientGoRest) InClusterConfig() (*rest.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InClusterConfig")
	ret0, _ := ret[0].(*rest.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InClusterConfig indicates an expected call of InClusterConfig.
func (mr *MockclientGoRestMockRecorder) InClusterConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InClusterConfig", reflect.TypeOf((*MockclientGoRest)(nil).InClusterConfig))
}
